<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客新主题</title>
      <link href="/2022/10/12/bo-ke-xin-zhu-ti/"/>
      <url>/2022/10/12/bo-ke-xin-zhu-ti/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站搭建 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go-前言</title>
      <link href="/2022/10/11/go-qian-yan/"/>
      <url>/2022/10/11/go-qian-yan/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
          <category> 前言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/09/29/jian-yi-jia-mi/"/>
      <url>/2022/09/29/jian-yi-jia-mi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言中的数据</title>
      <link href="/2022/09/23/c-yu-yan-zhong-de-shu-ju/"/>
      <url>/2022/09/23/c-yu-yan-zhong-de-shu-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="本章要点"><a href="#本章要点" class="headerlink" title="本章要点"></a>本章要点</h2><ol><li>变量与常量</li><li>C语言中基本数据类型</li><li>sizeof()函数</li></ol><h2 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h2><p>在程序中,有些数据是已经预设好的,整个程序的运行过程中,这些数据是不会改变的,这些就称为常量(constant)。而其他的一些数据,会在程序的运行过程中发生改变,就被称为变量(variable)。</p><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>在C语言中,常量可以是一个数字(比如3.14),也可以是一个特定的标识符。</p><h4 id="常量的定义"><a href="#常量的定义" class="headerlink" title="常量的定义"></a>常量的定义</h4><p>你可以通过以下命令在预处理中定义一个常量。</p><pre class="line-numbers language-none"><code class="language-none">#define  标识符  常量  // 注意, 最后没有分号, 标识符与常量之间也没有等号#define PI 3.14<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>#define又被称为宏定义,宏所表示的常量可以是数字、字符、字符串以及表达式。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h4><p>在C语言中通过以下几种方式定义变量。</p><pre class="line-numbers language-none"><code class="language-none">数据类型 变量名称;数据类型 变量名称1,变量名称2,变量名称3;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如:</p><pre class="line-numbers language-none"><code class="language-none">int a;char m, n, l;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="变量值的初始化"><a href="#变量值的初始化" class="headerlink" title="变量值的初始化"></a>变量值的初始化</h4><p>在C语言中,可以在定义语句中对变量赋值。<br>如:</p><pre class="line-numbers language-none"><code class="language-none">int a =1;int b, c =1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第一行语句定义了一个名为a的变量,并将它的初始值赋为1,而第一行的语句定义了b、c这两个变量,但只为c赋予了初始值1。</p><h2 id="C语言中基本数据类型"><a href="#C语言中基本数据类型" class="headerlink" title="C语言中基本数据类型"></a>C语言中基本数据类型</h2><p>C语言中</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
          <category> C语言中的数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言概述</title>
      <link href="/2022/09/23/c-yu-yan-gai-shu/"/>
      <url>/2022/09/23/c-yu-yan-gai-shu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2022/09/21/markdown-yu-fa/"/>
      <url>/2022/09/21/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown中,在一行的开始添加#来表示标题(#与文本之间有一个空格),#的数量表示标题的级,级越低,字体越大,从一级标题到六级标题逐渐变小。<br>也可采用在文本下加任意数量的 ==号来标识一级标题或--号来标识标题二级标题。</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p><code># 一级标题</code></p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><pre class="line-numbers language-none"><code class="language-none">一级标题=========<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p><code>## 二级标题</code></p><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><pre class="line-numbers language-none"><code class="language-none">二级标题--------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><code>### 三级标题 </code></p><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p><code>#### 四级标题</code></p><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><p><code>##### 五级标题</code></p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p><code>###### 六级标题</code></p><h2 id="换行与段落"><a href="#换行与段落" class="headerlink" title="换行与段落"></a>换行与段落</h2><p>Markdown中,在一行的末尾添加两个及以上的空格然后按回车即可创建一个换行,或在一行中使用&lt;br&gt;来换行。空白格会对文本进行分隔,来表示段落。<br>注意:不要使用空格或制表符(Tab)来缩进段落。</p><h2 id="粗体、斜体、下划线、删除线"><a href="#粗体、斜体、下划线、删除线" class="headerlink" title="粗体、斜体、下划线、删除线"></a>粗体、斜体、下划线、删除线</h2><p>在文本前后各添加两个星号(**)或下划线(__)来加粗,<br>在文本前后各添加一个星号(*)或下划线(_)来表示斜体。<br>但在加粗一个单词或时一个单词变为斜体时,一般不使用下划线。<br>在文本前后各添加两个加号(++)来给文本加下划线。<br>在文本前后各添加两个波浪号(~~)来给文本加删除线。</p><table><thead><tr><th>字体效果</th><th>Markdown语法</th><th>预览效果</th></tr></thead><tbody><tr><td>斜体</td><td>*Hello*</td><td><em>Hello</em></td></tr><tr><td>粗体</td><td>**Hello**</td><td><strong>Hello</strong></td></tr><tr><td>加下划线</td><td>++Hello++</td><td>++Hello++</td></tr><tr><td>加删除线</td><td>~~Hello~~</td><td><del>Hello</del></td></tr></tbody></table><h2 id="引用、代码"><a href="#引用、代码" class="headerlink" title="引用、代码"></a>引用、代码</h2><p>在一行最前方用符号(&gt;)来创建块引用。可以使用多个(&gt;)来实现嵌套。</p><blockquote><p>Hello</p><blockquote><p>hi</p><blockquote><p>你好</p></blockquote></blockquote></blockquote><pre class="line-numbers language-none"><code class="language-none">&gt;Hello &gt;&gt;hi &gt;&gt;&gt;你好<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用反引号(`)(在键盘左上角,esc下方这个键)将单词括起来表示代码,但只能在一行之间显示,如果有多行代码,需要每行都使用。<br><code>#include &lt;stdio&gt;</code></p><p> 在一段代码的前后使用三个反引号(```)或三个波浪号(~~~)来表示代码块。</p><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;int main(void){printf("Hello World!");return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li><p>有序列表<br> 在每个列表项前添加数字加一个英文句号(如1.)来创建有序列表。数字可以不按数学顺序(会自动修正成数学顺序),但必须从1开始。用缩进来嵌套列表。</p><ol><li>A</li><li>B</li><li>C<pre class="line-numbers language-none"><code class="language-none">1. A2. B3. C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol></li><li><p>无序列表<br> 在每个列表项前添加一个添加破折号 (-)、星号 (*) 或加号 (+) 来创建无序列表,注意符号与文本之间有一个空格。同样用缩进来嵌套列表。</p><ul><li>A</li><li>B</li><li>C<pre class="line-numbers language-none"><code class="language-none">* A* B* C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>任务列表<br> 在每个列表项前添加一个破折号和一对方括号,并在方括号之前添加一个空格(- [])来建立任务列表,要使复选框打勾,就在方括号之间加一个x([x])。</p><ul><li><input checked="" disabled="" type="checkbox"> A</li><li><input disabled="" type="checkbox"> B</li><li><input disabled="" type="checkbox"> C<pre class="line-numbers language-none"><code class="language-none">- [x] A- [ ] B- [ ] C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>在一行内单独的使用三个或多个星号 (***)、破折号 (---) 或下划线 (___) 来表示分割线。</p><hr><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接语法:<code>[超链接显示名](超链接地址 "超链接title")</code><br>超链接显示名:超链接的文本<br>超链接title:鼠标放在超链接上显示的文本<br>如:这是一个链接:<code>[欢迎](https://nothingalr8.top/2022/09/19/%E6%AC%A2%E8%BF%8E/ "欢迎")</code><br>这是一个链接:<a href="https://nothingalr8.top/2022/09/19/%E6%AC%A2%E8%BF%8E/" title="欢迎">欢迎</a></p><p>也可以使用&lt;&gt;将邮箱或网址扩起来,来表示链接。但即使未将网址用&lt;&gt;括起来,Markdown处理器也会自动将其转换为链接。如果不希望自动链接,就是要反引号(``)将网址括起来。</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>插入图片Markdown语法代码:<code>![图片alt](图片链接)</code></p><p>如:<code>![这只是一张简简单单的图片](This_is_a_simple_picture.png)</code><br><img src="/2022/09/21/markdown-yu-fa/This_is_a_simple_picture.png" alt="这只是一张简简单单的图片"></p><p><strong>hexo图片使用</strong><br>参考:<a href="https://zhuanlan.zhihu.com/p/265077468">https://zhuanlan.zhihu.com/p/265077468</a><br>其中图片链接可以是相对路径,绝对路径或是网络路径。<br>网络路径就是直接引用网上的图片,直接复制图片地址,放在圆括号中。<br>这种方式十分的方便,但是也存在一定的问题:</p><ul><li>图片失效导致无法加载;</li><li>打开网页后要再请求加载图片;</li><li>原网站限制,图片会变得不可见等。</li></ul><p>而博客是配置在网络上的,应选择使用相对路径的方式。<br>我们要使用文章资源文件夹,在hexo中使用文章资源文件夹需要将博客文件目录下的<code>config.yaml</code>文件中更改一下配置:<br><code>post_asset_folder: true</code></p><p>当该配置被应用后,使用hexo new命令创建新文章时,会生成相同名字的文件夹,也就是文章资源文件夹。</p><p>由于项目会生成新的文件目录,同时会解析Markdown中的图片路径,会导致一个问题。<br>如在一个文件目录下,博客名为1.md,相应的存在一个1文件夹存放图片image.jpg。<br>在hexo中,按理说应该是使用<code>![](image.jpg)</code>来使用图片,但网页中却无法正常显示。</p><p>为了解决这个问题,我们需要使用<code>hexo-renderer-marked</code>插件安装这个插件,使用以下命令来安装这个插件。<br><code>npm install hexo-renderer-marked</code></p><p>之后需要在源文件<code>config.yaml</code>更改一下配置(更改第一行,在最后添加第二到四行):</p><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: truemarked:prependRoot: truepostAsset: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>要显示Markdown语法中使用到的特殊字符需要使用转义字符反斜杠(\)。</p><table><thead><tr><th>需要转义的字符</th><th>字符名称</th></tr></thead><tbody><tr><td>\</td><td>反斜杠</td></tr><tr><td>`</td><td>反引号</td></tr><tr><td>*</td><td>星号</td></tr><tr><td>_</td><td>下划线</td></tr><tr><td>+</td><td>加号</td></tr><tr><td>-</td><td>减号</td></tr><tr><td>.</td><td>小数点</td></tr><tr><td>!</td><td>感叹号</td></tr><tr><td>|</td><td>竖线</td></tr><tr><td>#</td><td>井号</td></tr><tr><td>()</td><td>圆括号</td></tr><tr><td>[]</td><td>方括号</td></tr><tr><td>{}</td><td>花括号</td></tr></tbody></table><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>要添加表格,需要使用3个及以上减号字符(---)并使用竖线(|)来分隔每列,可以在表歌任意一端扩展表格。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">| Syntax      | Description || --------------| ------------|| Header      | Title     || Paragraph    | Text      |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>对齐</strong><br>可以在标题行(即第二行)减号的左、右侧或两侧增加冒号来使文本对齐到左侧、右侧或是居中。</p><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">| Syntax      | Description | Test Text     || :------        |    :---------:  |    -------: || Header      | Title       | Here's this   || Paragraph   | Text        | And more      |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>要创建脚注,需要使用<code>[^x]</code>符号,其中x可以为任意数字,但会自动转化为连续的数字,但不能含有空格。在博客的其他位置使用<code>[^x]: 文本</code>为脚注添加注释。 但是hexo的默认渲染器并不支持脚注功能,需要安装<code>hexo-reference</code>插件。<br>安装代码: <code>npm install hexo-reference</code><br>并在网站目录下的<code>_config.yml</code>文件中添加一下代码:</p><pre class="line-numbers language-none"><code class="language-none">plugins:  - hexo-reference<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是使用插件会有问题,需要把注释放在最后。同时,插件似乎与next主题会产生bug,导致跳转按钮错位,我就不使用了。</p><pre class="line-numbers language-none"><code class="language-none">这是一个脚注[^1]。[^1]:Hello!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="使用emoji表情"><a href="#使用emoji表情" class="headerlink" title="使用emoji表情"></a>使用emoji表情</h2><p>使用emoji表情有两种方法</p><ol><li>从<a href="https://emojipedia.org/">Emojipedia</a>或其他源上复制表情,并粘贴在Markdown文件中。❤️</li><li>使用表情符号简码。在Markdown中以两个冒号夹着一个表情符号的名称(:表情符号的名称:)来构成表情号简码。而<a href="https://gist.github.com/rxaviers/7360908">此网站</a>将为你提供各种表情符号简码。但注意,有些网站可能无法识别,比如说我的。<br><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>⛺</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/26fa.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><br><code>:smile:</code><code>:tent:</code></li></ol><h2 id="内嵌html标签"><a href="#内嵌html标签" class="headerlink" title="内嵌html标签"></a>内嵌html标签</h2><p>在Markdown中使用html语言,并不需要额外标注,可以直接使用。但在html中markdown不适用。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语言</title>
      <link href="/2022/09/19/markdown-yu-yan/"/>
      <url>/2022/09/19/markdown-yu-yan/</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown语言简介"><a href="#Markdown语言简介" class="headerlink" title="Markdown语言简介"></a>Markdown语言简介</h2><p>Markdown语言是一种简单的标记语言,语法简单,排版简洁,一般为.md格式的文件,而Github等众多网站都支持Markdown的语法。</p><h2 id="我与Markdown"><a href="#我与Markdown" class="headerlink" title="我与Markdown"></a>我与Markdown</h2><p>而这个网站所采用的就是markdown语言,这也是我开始学习Markdown的原因,我也乘着自己学习Markdown之时来编辑博客的第一个学习项目——Markdown语言。   </p><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p><a href="https://markdown.com.cn/">https://markdown.com.cn/</a><br><a href="https://zhuanlan.zhihu.com/p/99319314">https://zhuanlan.zhihu.com/p/99319314</a><br><a href="https://www.runoob.com/markdown/md-tutorial.html">https://www.runoob.com/markdown/md-tutorial.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎</title>
      <link href="/2022/09/19/huan-ying/"/>
      <url>/2022/09/19/huan-ying/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎来到我的个人博客"><a href="#欢迎来到我的个人博客" class="headerlink" title="欢迎来到我的个人博客!"></a>欢迎来到我的个人博客!</h1><p><strong>网站简介</strong><br>其实很早以前,我就想过建立自己的个人博客了,但都没有开始过。直到今天,我开始了。在这里,我将分享自己的学习经历,并将学习的知识点进行梳理,形成我自己的教程。其次,我希望在这里分享我感兴趣的,热爱的事情,不管是游戏还是科技,或是音乐。</p><p>感谢你的访问,如果我的博客帮助了你,我会非常开心。<br>最后,我希望你能给我留下宝贵的建议,也希望我自己能坚持写博客。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
